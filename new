<?php
$mod_id = "littlethings";
$base = "src/main/resources/assets/{$mod_id}/";
$toolset = ["sword", "spade", "pickaxe", "axe", "hoe"];
array_shift($argv);

switch (array_shift($argv)) {
	case 'b':
		foreach ($argv as $arg) {
			if (!file_exists($base . "blockstates/{$arg}.json")) {
				$file = fopen($base . "blockstates/{$arg}.json", "w");
				fwrite($file, "{\n");
				fwrite($file, "  \"variants\": {\n");
				fwrite($file, "    \"normal\": { \"model\": \"{$mod_id}:{$arg}\" }\n");
				fwrite($file, "  }\n");
				fwrite($file, "}");
				fclose($file);
			}

			if (!file_exists($base . "models/block/{$arg}.json")) {
				$file = fopen($base . "models/block/{$arg}.json", "w");
				fwrite($file, "{\n");
				fwrite($file, "  \"parent\": \"block/cube_all\",\n");
				fwrite($file, "  \"textures\": {\n");
				fwrite($file, "    \"all\": \"{$mod_id}:blocks/{$arg}\"\n");
				fwrite($file, "  }\n");
				fwrite($file, "}\n");
				fclose($file);
			}

			if (!file_exists($base . "models/item/{$arg}.json")) {
				$file = fopen($base . "models/item/{$arg}.json", "w");
				fwrite($file, "{\n");
				fwrite($file, "  \"parent\":\"{$mod_id}:block/{$arg}\",\n");
				fwrite($file, "  \"display\": {\n");
				fwrite($file, "    \"thirdperson\": {\n");
				fwrite($file, "      \"rotation\": [ 10, -45, 170 ],\n");
				fwrite($file, "      \"translation\": [ 0, 1.5, -2.75 ],\n");
				fwrite($file, "      \"scale\": [ 0.375, 0.375, 0.375 ]\n");
				fwrite($file, "    }\n");
				fwrite($file, "  }\n");
				fwrite($file, "}");
				fclose($file);
			}
			echo "Writen {$arg}\n";
		}
		break;

	case 'i':
		foreach ($argv as $arg) {
			if (!file_exists($base . "models/item/{$arg}.json")) {
				$file = fopen($base . "models/item/{$arg}.json", "w");
				fwrite($file, "{\n");
				fwrite($file, "  \"parent\":\"{$mod_id}:item/_standard_item\",\n");
				fwrite($file, "  \"textures\": {\n");
				fwrite($file, "    \"layer0\":\"{$mod_id}:items/{$arg}\"\n");
				fwrite($file, "  }\n");
				fwrite($file, "}");
				fclose($file);
			}

			echo "Writen {$arg}\n";
		}
		break;

	case 'toolset':
		foreach ($argv as $arg) {
			foreach ($toolset as $x) {
				if (!file_exists($base . "models/item/{$arg}_{$x}.json")) {
					$file = fopen($base . "models/item/{$arg}_{$x}.json", "w");
					fwrite($file, "{\n");
					fwrite($file, "  \"parent\":\"item/handheld\",\n");
					fwrite($file, "  \"textures\": {\n");
					fwrite($file, "    \"layer0\":\"{$mod_id}:items/{$arg}_{$x}\"\n");
					fwrite($file, "  }\n");
					fwrite($file, "}");
					fclose($file);
		    	}
			}

			echo "Writen {$arg}\n";
        }
        break;

    case 'button':
    	foreach ($argv as $arg) {
			if (!file_exists($base . "blockstates/{$arg}_button.json")) {
				file_put_contents($base . "blockstates/{$arg}_button.json", str_replace("wooden", $arg, '{
    "variants": {
        "facing=up,powered=false":    { "model": "littlethings:wooden_button", "uvlock": true },
        "facing=down,powered=false":  { "model": "littlethings:wooden_button", "uvlock": true, "x": 180 },
        "facing=east,powered=false":  { "model": "littlethings:wooden_button", "uvlock": true, "x": 90, "y": 90 },
        "facing=west,powered=false":  { "model": "littlethings:wooden_button", "uvlock": true, "x": 90, "y": 270 },
        "facing=south,powered=false": { "model": "littlethings:wooden_button", "uvlock": true, "x": 90, "y": 180 },
        "facing=north,powered=false": { "model": "littlethings:wooden_button", "uvlock": true, "x": 90 },
        "facing=up,powered=true":     { "model": "littlethings:wooden_button_pressed", "uvlock": true },
        "facing=down,powered=true":   { "model": "littlethings:wooden_button_pressed", "uvlock": true, "x": 180 },
        "facing=east,powered=true":   { "model": "littlethings:wooden_button_pressed", "uvlock": true, "x": 90, "y": 90 },
        "facing=west,powered=true":   { "model": "littlethings:wooden_button_pressed", "uvlock": true, "x": 90, "y": 270 },
        "facing=south,powered=true":  { "model": "littlethings:wooden_button_pressed", "uvlock": true, "x": 90, "y": 180 },
        "facing=north,powered=true":  { "model": "littlethings:wooden_button_pressed", "uvlock": true, "x": 90 }
    }
}
'));
			}

			if (!file_exists($base . "models/block/{$arg}_button.json")) {
				file_put_contents($base . "models/block/{$arg}_button.json", '{
    "parent": "block/button",
    "textures": {
        "texture": "minecraft:blocks/planks_' . $arg . '"
    }
}
');
				file_put_contents($base . "models/block/{$arg}_button_pressed.json", '{
    "parent": "block/button_pressed",
    "textures": {
        "texture": "minecraft:blocks/planks_' . $arg . '"
    }
}
');
				file_put_contents($base . "models/block/{$arg}_button_inventory.json", '{
    "parent": "block/button_inventory",
    "textures": {
        "texture": "minecraft:blocks/planks_' . $arg . '"
    }
}
');
			}

			if (!file_exists($base . "models/item/{$arg}_button.json")) {
				file_put_contents($base . "models/item/{$arg}_button.json", '{
    "parent": "littlethings:block/' . $arg . '_button_inventory"
}
');
			}
			echo "Writen {$arg}\n";
		}
  		break;

	default:
		echo "Must have b or i has first arg\n";
}